// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kv_service.proto

/*
Package objectserver is a generated protocol buffer package.

It is generated from these files:
	kv_service.proto

It has these top-level messages:
	KVAsyncJob
	ListAsyncJobsMsg
	ListAsyncJobsReply
	SaveAsyncJobMsg
	SaveAsyncJobReply
	CleanAsyncJobMsg
	CleanAsyncJobReply
*/
package objectserver

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type KVAsyncJob struct {
	Method    string            `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
	Headers   map[string]string `protobuf:"bytes,2,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Account   string            `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	Container string            `protobuf:"bytes,4,opt,name=container" json:"container,omitempty"`
	Object    string            `protobuf:"bytes,5,opt,name=object" json:"object,omitempty"`
	Device    string            `protobuf:"bytes,6,opt,name=device" json:"device,omitempty"`
	Policy    int32             `protobuf:"varint,7,opt,name=policy" json:"policy,omitempty"`
}

func (m *KVAsyncJob) Reset()                    { *m = KVAsyncJob{} }
func (m *KVAsyncJob) String() string            { return proto.CompactTextString(m) }
func (*KVAsyncJob) ProtoMessage()               {}
func (*KVAsyncJob) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *KVAsyncJob) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *KVAsyncJob) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *KVAsyncJob) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *KVAsyncJob) GetContainer() string {
	if m != nil {
		return m.Container
	}
	return ""
}

func (m *KVAsyncJob) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *KVAsyncJob) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *KVAsyncJob) GetPolicy() int32 {
	if m != nil {
		return m.Policy
	}
	return 0
}

type ListAsyncJobsMsg struct {
	Device     string      `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
	Policy     int32       `protobuf:"varint,2,opt,name=policy" json:"policy,omitempty"`
	Pagination int32       `protobuf:"varint,3,opt,name=pagination" json:"pagination,omitempty"`
	Position   *KVAsyncJob `protobuf:"bytes,4,opt,name=position" json:"position,omitempty"`
}

func (m *ListAsyncJobsMsg) Reset()                    { *m = ListAsyncJobsMsg{} }
func (m *ListAsyncJobsMsg) String() string            { return proto.CompactTextString(m) }
func (*ListAsyncJobsMsg) ProtoMessage()               {}
func (*ListAsyncJobsMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListAsyncJobsMsg) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *ListAsyncJobsMsg) GetPolicy() int32 {
	if m != nil {
		return m.Policy
	}
	return 0
}

func (m *ListAsyncJobsMsg) GetPagination() int32 {
	if m != nil {
		return m.Pagination
	}
	return 0
}

func (m *ListAsyncJobsMsg) GetPosition() *KVAsyncJob {
	if m != nil {
		return m.Position
	}
	return nil
}

type ListAsyncJobsReply struct {
	Jobs []*KVAsyncJob `protobuf:"bytes,1,rep,name=jobs" json:"jobs,omitempty"`
}

func (m *ListAsyncJobsReply) Reset()                    { *m = ListAsyncJobsReply{} }
func (m *ListAsyncJobsReply) String() string            { return proto.CompactTextString(m) }
func (*ListAsyncJobsReply) ProtoMessage()               {}
func (*ListAsyncJobsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListAsyncJobsReply) GetJobs() []*KVAsyncJob {
	if m != nil {
		return m.Jobs
	}
	return nil
}

type SaveAsyncJobMsg struct {
	Job *KVAsyncJob `protobuf:"bytes,1,opt,name=job" json:"job,omitempty"`
}

func (m *SaveAsyncJobMsg) Reset()                    { *m = SaveAsyncJobMsg{} }
func (m *SaveAsyncJobMsg) String() string            { return proto.CompactTextString(m) }
func (*SaveAsyncJobMsg) ProtoMessage()               {}
func (*SaveAsyncJobMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SaveAsyncJobMsg) GetJob() *KVAsyncJob {
	if m != nil {
		return m.Job
	}
	return nil
}

type SaveAsyncJobReply struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *SaveAsyncJobReply) Reset()                    { *m = SaveAsyncJobReply{} }
func (m *SaveAsyncJobReply) String() string            { return proto.CompactTextString(m) }
func (*SaveAsyncJobReply) ProtoMessage()               {}
func (*SaveAsyncJobReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SaveAsyncJobReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type CleanAsyncJobMsg struct {
	Job *KVAsyncJob `protobuf:"bytes,4,opt,name=job" json:"job,omitempty"`
}

func (m *CleanAsyncJobMsg) Reset()                    { *m = CleanAsyncJobMsg{} }
func (m *CleanAsyncJobMsg) String() string            { return proto.CompactTextString(m) }
func (*CleanAsyncJobMsg) ProtoMessage()               {}
func (*CleanAsyncJobMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CleanAsyncJobMsg) GetJob() *KVAsyncJob {
	if m != nil {
		return m.Job
	}
	return nil
}

type CleanAsyncJobReply struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *CleanAsyncJobReply) Reset()                    { *m = CleanAsyncJobReply{} }
func (m *CleanAsyncJobReply) String() string            { return proto.CompactTextString(m) }
func (*CleanAsyncJobReply) ProtoMessage()               {}
func (*CleanAsyncJobReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CleanAsyncJobReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*KVAsyncJob)(nil), "objectserver.KVAsyncJob")
	proto.RegisterType((*ListAsyncJobsMsg)(nil), "objectserver.ListAsyncJobsMsg")
	proto.RegisterType((*ListAsyncJobsReply)(nil), "objectserver.ListAsyncJobsReply")
	proto.RegisterType((*SaveAsyncJobMsg)(nil), "objectserver.SaveAsyncJobMsg")
	proto.RegisterType((*SaveAsyncJobReply)(nil), "objectserver.SaveAsyncJobReply")
	proto.RegisterType((*CleanAsyncJobMsg)(nil), "objectserver.CleanAsyncJobMsg")
	proto.RegisterType((*CleanAsyncJobReply)(nil), "objectserver.CleanAsyncJobReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for KVService service

type KVServiceClient interface {
	SaveAsyncJob(ctx context.Context, in *SaveAsyncJobMsg, opts ...grpc.CallOption) (*SaveAsyncJobReply, error)
	ListAsyncJobs(ctx context.Context, in *ListAsyncJobsMsg, opts ...grpc.CallOption) (*ListAsyncJobsReply, error)
	CleanAsyncJob(ctx context.Context, in *CleanAsyncJobMsg, opts ...grpc.CallOption) (*CleanAsyncJobReply, error)
}

type kVServiceClient struct {
	cc *grpc.ClientConn
}

func NewKVServiceClient(cc *grpc.ClientConn) KVServiceClient {
	return &kVServiceClient{cc}
}

func (c *kVServiceClient) SaveAsyncJob(ctx context.Context, in *SaveAsyncJobMsg, opts ...grpc.CallOption) (*SaveAsyncJobReply, error) {
	out := new(SaveAsyncJobReply)
	err := grpc.Invoke(ctx, "/objectserver.KVService/SaveAsyncJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVServiceClient) ListAsyncJobs(ctx context.Context, in *ListAsyncJobsMsg, opts ...grpc.CallOption) (*ListAsyncJobsReply, error) {
	out := new(ListAsyncJobsReply)
	err := grpc.Invoke(ctx, "/objectserver.KVService/ListAsyncJobs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVServiceClient) CleanAsyncJob(ctx context.Context, in *CleanAsyncJobMsg, opts ...grpc.CallOption) (*CleanAsyncJobReply, error) {
	out := new(CleanAsyncJobReply)
	err := grpc.Invoke(ctx, "/objectserver.KVService/CleanAsyncJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for KVService service

type KVServiceServer interface {
	SaveAsyncJob(context.Context, *SaveAsyncJobMsg) (*SaveAsyncJobReply, error)
	ListAsyncJobs(context.Context, *ListAsyncJobsMsg) (*ListAsyncJobsReply, error)
	CleanAsyncJob(context.Context, *CleanAsyncJobMsg) (*CleanAsyncJobReply, error)
}

func RegisterKVServiceServer(s *grpc.Server, srv KVServiceServer) {
	s.RegisterService(&_KVService_serviceDesc, srv)
}

func _KVService_SaveAsyncJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveAsyncJobMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServiceServer).SaveAsyncJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/objectserver.KVService/SaveAsyncJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServiceServer).SaveAsyncJob(ctx, req.(*SaveAsyncJobMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _KVService_ListAsyncJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAsyncJobsMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServiceServer).ListAsyncJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/objectserver.KVService/ListAsyncJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServiceServer).ListAsyncJobs(ctx, req.(*ListAsyncJobsMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _KVService_CleanAsyncJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CleanAsyncJobMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServiceServer).CleanAsyncJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/objectserver.KVService/CleanAsyncJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServiceServer).CleanAsyncJob(ctx, req.(*CleanAsyncJobMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _KVService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "objectserver.KVService",
	HandlerType: (*KVServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveAsyncJob",
			Handler:    _KVService_SaveAsyncJob_Handler,
		},
		{
			MethodName: "ListAsyncJobs",
			Handler:    _KVService_ListAsyncJobs_Handler,
		},
		{
			MethodName: "CleanAsyncJob",
			Handler:    _KVService_CleanAsyncJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kv_service.proto",
}

func init() { proto.RegisterFile("kv_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 446 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x5d, 0x8b, 0x13, 0x31,
	0x14, 0xdd, 0x99, 0x7e, 0x6d, 0xef, 0x56, 0xac, 0x17, 0x91, 0x50, 0x74, 0x2d, 0x01, 0xa1, 0x88,
	0xce, 0x43, 0xf5, 0x41, 0x16, 0x54, 0x54, 0x04, 0x71, 0x15, 0x64, 0x0a, 0xfb, 0x2a, 0x99, 0x34,
	0xec, 0x4e, 0xb7, 0x26, 0xc3, 0x24, 0x2d, 0xcc, 0x2f, 0xf0, 0x2f, 0xf8, 0xea, 0x3f, 0x95, 0x24,
	0x1d, 0x37, 0x33, 0xda, 0xea, 0x5b, 0xcf, 0xb9, 0xf7, 0x9e, 0x7b, 0xee, 0x99, 0x06, 0xc6, 0xd7,
	0xdb, 0xaf, 0x5a, 0x94, 0xdb, 0x9c, 0x8b, 0xa4, 0x28, 0x95, 0x51, 0x38, 0x52, 0xd9, 0x4a, 0x70,
	0x63, 0x49, 0x51, 0xd2, 0x9f, 0x31, 0xc0, 0xf9, 0xc5, 0x1b, 0x5d, 0x49, 0xfe, 0x51, 0x65, 0x78,
	0x0f, 0xfa, 0xdf, 0x84, 0xb9, 0x52, 0x4b, 0x12, 0x4d, 0xa3, 0xd9, 0x30, 0xdd, 0x21, 0x7c, 0x0d,
	0x83, 0x2b, 0xc1, 0x96, 0xa2, 0xd4, 0x24, 0x9e, 0x76, 0x66, 0x27, 0xf3, 0x47, 0x49, 0x28, 0x93,
	0xdc, 0x48, 0x24, 0x1f, 0x7c, 0xdf, 0x7b, 0x69, 0xca, 0x2a, 0xad, 0xa7, 0x90, 0xc0, 0x80, 0x71,
	0xae, 0x36, 0xd2, 0x90, 0x8e, 0x53, 0xae, 0x21, 0xde, 0x87, 0x21, 0x57, 0xd2, 0xb0, 0x5c, 0x8a,
	0x92, 0x74, 0x5d, 0xed, 0x86, 0xb0, 0x86, 0xfc, 0x22, 0xd2, 0xf3, 0x86, 0x3c, 0xb2, 0xfc, 0x52,
	0xd8, 0xab, 0x48, 0xdf, 0xf3, 0x1e, 0x59, 0xbe, 0x50, 0xeb, 0x9c, 0x57, 0x64, 0x30, 0x8d, 0x66,
	0xbd, 0x74, 0x87, 0x26, 0x67, 0x30, 0x0a, 0x8d, 0xe1, 0x18, 0x3a, 0xd7, 0xa2, 0xda, 0x5d, 0x69,
	0x7f, 0xe2, 0x5d, 0xe8, 0x6d, 0xd9, 0x7a, 0x23, 0x48, 0xec, 0x38, 0x0f, 0xce, 0xe2, 0x17, 0x11,
	0xfd, 0x11, 0xc1, 0xf8, 0x53, 0xae, 0x4d, 0x7d, 0xa2, 0xfe, 0xac, 0x2f, 0x03, 0x03, 0xd1, 0x1e,
	0x03, 0x71, 0x68, 0x00, 0x4f, 0x01, 0x0a, 0x76, 0x99, 0x4b, 0x66, 0x72, 0x25, 0x5d, 0x06, 0xbd,
	0x34, 0x60, 0xf0, 0x39, 0x1c, 0x17, 0x4a, 0xe7, 0xae, 0x6a, 0x53, 0x38, 0x99, 0x93, 0x7d, 0x11,
	0xa7, 0xbf, 0x3b, 0xe9, 0x5b, 0xc0, 0x86, 0xb3, 0x54, 0x14, 0xeb, 0x0a, 0x9f, 0x40, 0x77, 0xa5,
	0x32, 0x4d, 0x22, 0xf7, 0xa9, 0xf6, 0xeb, 0xb8, 0x2e, 0xfa, 0x12, 0x6e, 0x2f, 0xd8, 0x56, 0xd4,
	0xac, 0x3d, 0xee, 0x31, 0x74, 0x56, 0x2a, 0x73, 0x97, 0x1d, 0x9a, 0xb7, 0x4d, 0xf4, 0x29, 0xdc,
	0x09, 0xc7, 0xbd, 0x03, 0x02, 0x03, 0xbd, 0xe1, 0x5c, 0x68, 0xed, 0x44, 0x8e, 0xd3, 0x1a, 0xd2,
	0x57, 0x30, 0x7e, 0xb7, 0x16, 0x4c, 0xfe, 0x65, 0x5d, 0xf7, 0x7f, 0xd6, 0x25, 0x80, 0x8d, 0xf9,
	0x7f, 0xec, 0x9b, 0x7f, 0x8f, 0x61, 0x78, 0x7e, 0xb1, 0xf0, 0x4f, 0x00, 0xbf, 0xc0, 0x28, 0x34,
	0x8b, 0x0f, 0x9a, 0xcb, 0x5a, 0x39, 0x4c, 0x1e, 0xee, 0x2f, 0xbb, 0xbd, 0xf4, 0x08, 0x17, 0x70,
	0xab, 0xf1, 0x05, 0xf0, 0xb4, 0x39, 0xd3, 0xfe, 0xe3, 0x4c, 0xa6, 0x07, 0xea, 0x81, 0x68, 0xe3,
	0xc8, 0xb6, 0x68, 0x3b, 0xc1, 0xb6, 0xe8, 0x9f, 0x09, 0xd1, 0xa3, 0xac, 0xef, 0xde, 0xff, 0xb3,
	0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x03, 0x11, 0x70, 0xb4, 0x13, 0x04, 0x00, 0x00,
}
